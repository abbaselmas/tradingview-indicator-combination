// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Thanks go to:
// StackOverFlow Bjorn Mistiaen
// Disclaimer this indicator works on Daily timeframe and below. To pick up all lines move the chart back in time.

//@version=4
study("Naked - Daily Weekly Monthly Opens", overlay = true)

//Line Colors
DailyColor = input(color.yellow, title="Daily Color", inline = "Input 0") 
WeeklyColor = input(color.blue, title="Weekly Color", inline = "Input 0") 
MonthlyColor = input(color.purple, title="Monthly Color", inline = "Input 0") 

ShowDaily = input(true, title = "Show Partial Naked Daily Opens", group = "Partial Naked - Show / Hide Opens", type = input.bool)
ShowDailyColor = ShowDaily ? DailyColor : na

ShowWeekly = input(true, title = "Show Partial Naked Weekly Opens", group = "Partial Naked - Show / Hide Opens", type = input.bool)
ShowWeeklyColor = ShowWeekly ? WeeklyColor : na

ShowMonthly = input(true, title = "Show Partial Naked Monthly Opens", group = "Partial Naked - Show / Hide Opens", type = input.bool)
ShowMonthlyColor = ShowMonthly ? MonthlyColor : na


//Line Style
linestyle = line.style_dotted
dotted = input(true, title="Dotted Line", group="Partial Naked - Line Options", inline = "2")
solid = input(false, title="Solid Line", group="Partial Naked - Line Options", inline = "2")
dashed = input(false, title="Dashed Line", group="Partial Naked - Line Options", inline = "2", tooltip="Only select one of line style")


linestyle := dotted ? line.style_dotted : solid ? line.style_solid : dashed ? line.style_dashed : linestyle


color line_color = na
if dayofweek == 3
    line_color := ShowWeeklyColor
else if dayofmonth == 2
    line_color := ShowMonthlyColor
else 
    line_color := ShowDailyColor


cShowDaily = input(true, title = "Show Total Naked Daily Opens", group = "Total Naked - Show / Hide Opens", type = input.bool)
cShowDailyColor = cShowDaily ? DailyColor : na

cShowWeekly = input(true, title = "Show Total Naked Weekly Opens", group = "Total Naked - Show / Hide Opens", type = input.bool)
cShowWeeklyColor = cShowWeekly ? WeeklyColor : na

cShowMonthly = input(true, title = "Show Naked Monthly Opens", group = "Total Naked - Show / Hide Opens", type = input.bool)
cShowMonthlyColor = cShowMonthly ? MonthlyColor : na


clinestyle = line.style_solid
csolid = input(true, title="Solid Line", group="Total Naked - Line Options", inline = "2")
cdashed = input(false, title="Dashed Line", group="Total Naked - Line Options", inline = "2")
cdotted = input(false, title="Dotted Line", group="Total Naked - Line Options", inline = "2", tooltip="Only select one of line style")

clinestyle := csolid ? line.style_solid : cdashed ? line.style_dashed : cdotted ? line.style_dotted : clinestyle


color cline_color = na
if dayofweek == 3
    cline_color := cShowWeeklyColor
else if dayofmonth == 2
    cline_color := cShowMonthlyColor
else 
    cline_color := cShowDailyColor



dtf = "D", title = "Time Frame", type = input.resolution


is_new_bar(t) => 
    change(time(t)) != 0




///////////// Daily Up
float UppdOpen = 0.0
float UpdOpen = 0.0
UpdOpen := security(syminfo.tickerid, 'D', open)
UppdOpen := is_new_bar(dtf) ? UpdOpen[1] : UppdOpen[1]


var line[]  UpdOpenlines = array.new_line()
var float[] UpdOpens  = array.new_float()

if is_new_bar(dtf)
    array.push(UpdOpenlines, line.new(time, UppdOpen, time+1, UppdOpen, xloc=xloc.bar_time, style=linestyle, color=line_color, extend=extend.right))
    array.push(UpdOpens, UppdOpen)

if array.size(UpdOpens) > 0
    for i = 0 to array.size(UpdOpens)-1
        UpmydOpen = array.get(UpdOpens,i)
        if UpmydOpen < open
            line.delete(array.get(UpdOpenlines,i))
            
///////////// Daily Down
float DownpdOpen = 0.0
float DowndOpen = 0.0
DowndOpen := security(syminfo.tickerid, 'D', open)
DownpdOpen := is_new_bar(dtf) ? DowndOpen[1] : DownpdOpen[1]


var line[]  DowndOpenlines = array.new_line()
var float[] DowndOpens  = array.new_float()

if is_new_bar(dtf)
    array.push(DowndOpenlines, line.new(time, DownpdOpen, time+1, DownpdOpen, xloc=xloc.bar_time, style=linestyle, color=line_color, extend=extend.right))
    array.push(DowndOpens, DownpdOpen)

if array.size(DowndOpens) > 0
    for i = 0 to array.size(DowndOpens)-1
        DownmydOpen = array.get(DowndOpens,i)
        if DownmydOpen > open 
            line.delete(array.get(DowndOpenlines,i))





///////////// Daily Up
float cUppdOpen = 0.0
float cUpdOpen = 0.0
cUpdOpen := security(syminfo.tickerid, 'D', open)
cUppdOpen := is_new_bar(dtf) ? cUpdOpen[1] : cUppdOpen[1]


var line[]  cUpdOpenlines = array.new_line()
var float[] cUpdOpens  = array.new_float()

if is_new_bar(dtf)
    array.push(cUpdOpenlines, line.new(time, cUppdOpen, time+1, cUppdOpen, xloc=xloc.bar_time, style=clinestyle, color=cline_color, extend=extend.right))
    array.push(cUpdOpens, cUppdOpen)

if array.size(cUpdOpens) > 0
    for i = 0 to array.size(cUpdOpens)-1
        cUpmydOpen = array.get(cUpdOpens,i)
        if cUpmydOpen < high
            line.delete(array.get(cUpdOpenlines,i))
            
///////////// Daily Down
float cDownpdOpen = 0.0
float cDowndOpen = 0.0
cDowndOpen := security(syminfo.tickerid, 'D', open)
cDownpdOpen := is_new_bar(dtf) ? cDowndOpen[1] : cDownpdOpen[1]


var line[]  cDowndOpenlines = array.new_line()
var float[] cDowndOpens  = array.new_float()

if is_new_bar(dtf)
    array.push(cDowndOpenlines, line.new(time, cDownpdOpen, time+1, cDownpdOpen, xloc=xloc.bar_time, style=clinestyle, color=cline_color, extend=extend.right))
    array.push(cDowndOpens, cDownpdOpen)

if array.size(cDowndOpens) > 0
    for i = 0 to array.size(cDowndOpens)-1
        cDownmydOpen = array.get(cDowndOpens,i)
        if cDownmydOpen > low 
            line.delete(array.get(cDowndOpenlines,i))



