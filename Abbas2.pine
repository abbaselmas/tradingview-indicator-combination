//@version=5
indicator(title='VWAPs | Opens', shorttitle='Abbas2', overlay=true, precision=4, linktoseries=true, max_bars_back=1000, max_lines_count=500)

//Chart Champions
NoLabel = input.bool(false, title='No Label Option ', tooltip='Option to have no Label Box')
//Generic
NoLabelOption = NoLabel ? label.style_none : label.style_label_left
PriceLocation = NoLabel ? '                          ' : ''
PriceLocation1 = NoLabel ? '                                 ' : ''
LabelSize = NoLabel ? size.normal : size.small

//Line Colors
DanCCDailyInputColor = input.color(color.blue, title='Daily', group='User Selectable Line Colors', inline='Input 0')
DanCCWeeklyInputColor = input.color(color.orange, title='Weekly', group='User Selectable Line Colors', inline='Input 0')
DanCCMonthlyInputColor = input.color(color.purple, title='Monthly', group='User Selectable Line Colors', inline='Input 0')

//Daily Open
WVWAPTxtLabelColor = NoLabel ? DanCCWeeklyInputColor : color.black
MVWAPTxtLabelColor = NoLabel ? DanCCMonthlyInputColor : color.white
A24VWAPTxtLabelColor = NoLabel ? color.blue : color.white

/////////////////////////////////VWAPs
show_WVWAPs = input.bool(false, title='Weekly', group='Standard VWAPS - Daily, Weekly, Monthly', inline='VWAP1')
show_MVWAPs = input.bool(false, title='Monthly', group='Standard VWAPS - Daily, Weekly, Monthly', inline='VWAP1', tooltip='M-VWAP only shows on the 5 min and above timeframe / \'Live 24\' hour constantly updating VWAP')

show_Live24VWAPs = input.bool(false, title='Live 24', group='Optional VWAPS', inline='VWAP1')
show_Live24VWAPs_color = show_Live24VWAPs ? color.blue : na
show_Live24VWAPs_text = show_Live24VWAPs ? A24VWAPTxtLabelColor : na

show_WVWAPs_color = show_WVWAPs ? DanCCWeeklyInputColor : na
show_WVWAPs_text = show_WVWAPs ? WVWAPTxtLabelColor : na
show_MVWAPs_color = show_MVWAPs ? DanCCMonthlyInputColor : na
show_MVWAPs_text = show_MVWAPs ? MVWAPTxtLabelColor : na

is_today = year == year(timenow) and month == month(timenow) and dayofmonth == dayofmonth(timenow)

///VWAP rounding issue resolution 
f_round_up_to_tick(x, mintick) =>
	mult = 1 / mintick
	value = math.ceil(x * mult) / mult
	value

f_round_down_to_tick(x, mintick) =>
	mult = 1 / mintick
	value = math.floor(x * mult) / mult
	value
/////////////////////////////////////////////////

//Weeekly VWAP
src = hlc3
wt = time('W')
wstart = na(wt[1]) or wt > wt[1]
wsumSrc = src * volume
wsumVol = volume
wsumSrc := wstart ? wsumSrc : wsumSrc + wsumSrc[1]
wsumVol := wstart ? wsumVol : wsumVol + wsumVol[1]
WVWAP = wsumSrc / wsumVol
wvw = f_round_up_to_tick(WVWAP, syminfo.mintick)
plot(timeframe.isintraday ? wvw : na, title='W-VWAP', color=show_WVWAPs_color)
var label wVWAPLabel = na
wVWAPLabel := label.new(timenow, timeframe.isintraday ? wvw : na, xloc=xloc.bar_time, text=PriceLocation + 'W - ' + str.tostring(timeframe.isintraday ? wvw : na), color=show_WVWAPs_color, textcolor=show_WVWAPs_text, style=NoLabelOption, size=LabelSize)
label.delete(wVWAPLabel[1])

//Monthly VWAP
var float vwapsum = na
var float volumesum = na
newSession = ta.change(time('M'))
vwapsum := newSession ? hl2 * volume : hl2 * volume + vwapsum[1]
volumesum := newSession ? volume : volume + volumesum[1]
MVWAP = vwapsum / volumesum
mvw = f_round_up_to_tick(MVWAP, syminfo.mintick)
plot(newSession ? na : mvw, title='M-VWAP', color=show_MVWAPs_color, style=plot.style_linebr)
var label mVWAPLabel = na
mVWAPLabel := label.new(timenow, timeframe.isintraday ? mvw : na, xloc=xloc.bar_time, text=PriceLocation + 'M - ' + str.tostring(timeframe.isintraday ? mvw : na), color=show_MVWAPs_color, textcolor=show_MVWAPs_text, style=NoLabelOption, size=LabelSize)
label.delete(mVWAPLabel[1])
/////////////////////////////////////////////////////////////////////

/////////24 HOUR ROLLING VWAP///////////////////////////////////////////

//VWAP 24 hour 1 min
//TF = Time Frame
TF_24_1 = timeframe.period == '1'

cumulativePeriod_24_1 = 1440

typicalPrice_24_1 = (high + low + close) / 3
typicalPriceVolume_24_1 = typicalPrice_24_1 * volume
cumulativeTypicalPriceVolume_24_1 = math.sum(typicalPriceVolume_24_1, cumulativePeriod_24_1)
cumulativeVolume_24_1 = math.sum(volume, cumulativePeriod_24_1)
vwapValue_24_1 = cumulativeTypicalPriceVolume_24_1 / cumulativeVolume_24_1

plot(vwapValue_24_1 and TF_24_1 ? vwapValue_24_1 : na, color=show_Live24VWAPs_color)
var label vwapValueLabel_24_1 = na
vwapValueLabel_24_1 := label.new(timenow, vwapValue_24_1 and TF_24_1 ? vwapValue_24_1 : na, xloc=xloc.bar_time, text=PriceLocation1 + 'L-24 - ' + str.tostring(f_round_up_to_tick(vwapValue_24_1, syminfo.mintick)), color=show_Live24VWAPs_color, textcolor=show_Live24VWAPs_text, style=NoLabelOption, size=LabelSize)
label.delete(vwapValueLabel_24_1[1])

//VWAP 24 hour 5 min
//TF = Time Frame
TF_24_5 = timeframe.period == '5'

cumulativePeriod_24_5 = 288

typicalPrice_24_5 = (high + low + close) / 3
typicalPriceVolume_24_5 = typicalPrice_24_5 * volume
cumulativeTypicalPriceVolume_24_5 = math.sum(typicalPriceVolume_24_5, cumulativePeriod_24_5)
cumulativeVolume_24_5 = math.sum(volume, cumulativePeriod_24_5)
vwapValue_24_5 = cumulativeTypicalPriceVolume_24_5 / cumulativeVolume_24_5

plot(vwapValue_24_5 and TF_24_5 ? vwapValue_24_5 : na, color=show_Live24VWAPs_color)
var label vwapValueLabel_24_5 = na
vwapValueLabel_24_5 := label.new(timenow, vwapValue_24_5 and TF_24_5 ? vwapValue_24_5 : na, xloc=xloc.bar_time, text=PriceLocation1 + 'L-24 - ' + str.tostring(f_round_up_to_tick(vwapValue_24_5, syminfo.mintick)), color=show_Live24VWAPs_color, textcolor=show_Live24VWAPs_text, style=NoLabelOption, size=LabelSize)
label.delete(vwapValueLabel_24_5[1])

//VWAP 24 hour 15 min
//TF = Time Frame
TF_24_15 = timeframe.period == '15'

cumulativePeriod_24_15 = 96

typicalPrice_24_15 = (high + low + close) / 3
typicalPriceVolume_24_15 = typicalPrice_24_15 * volume
cumulativeTypicalPriceVolume_24_15 = math.sum(typicalPriceVolume_24_15, cumulativePeriod_24_15)
cumulativeVolume_24_15 = math.sum(volume, cumulativePeriod_24_15)
vwapValue_24_15 = cumulativeTypicalPriceVolume_24_15 / cumulativeVolume_24_15

plot(vwapValue_24_15 and TF_24_15 ? vwapValue_24_15 : na, color=show_Live24VWAPs_color)
var label vwapValueLabel_24_15 = na
vwapValueLabel_24_15 := label.new(timenow, vwapValue_24_15 and TF_24_15 ? vwapValue_24_15 : na, xloc=xloc.bar_time, text=PriceLocation1 + 'L-24 - ' + str.tostring(f_round_up_to_tick(vwapValue_24_15, syminfo.mintick)), color=show_Live24VWAPs_color, textcolor=show_Live24VWAPs_text, style=NoLabelOption, size=LabelSize)
label.delete(vwapValueLabel_24_15[1])

///////////////////////////////

//Monthly Open
mOpen = request.security(syminfo.tickerid, 'M', open, lookahead=barmerge.lookahead_on)
pmOpen = request.security(syminfo.tickerid, 'M', open[1], lookahead=barmerge.lookahead_on)

pmHigh = request.security(syminfo.tickerid, 'M', high[1], lookahead=barmerge.lookahead_on)
pmLow = request.security(syminfo.tickerid, 'M', low[1], lookahead=barmerge.lookahead_on)

//Weekly Open
wOpen = request.security(syminfo.tickerid, 'W', open, lookahead=barmerge.lookahead_on)
pwOpen = request.security(syminfo.tickerid, 'W', open[1], lookahead=barmerge.lookahead_on)

//Previous Day Open High Low
dOpen = request.security(syminfo.tickerid, 'D', open, lookahead=barmerge.lookahead_on)
pdOpen = request.security(syminfo.tickerid, 'D', open[1], lookahead=barmerge.lookahead_on)
dbyOpen = request.security(syminfo.tickerid, 'D', open[2], lookahead=barmerge.lookahead_on)

pdHigh = request.security(syminfo.tickerid, 'D', high[1], lookahead=barmerge.lookahead_on)
pdLow = request.security(syminfo.tickerid, 'D', low[1], lookahead=barmerge.lookahead_on)
pdEQ = (pdHigh + pdLow) / 2

pwHigh = request.security(syminfo.tickerid, 'W', high[1], lookahead=barmerge.lookahead_on)
pwLow = request.security(syminfo.tickerid, 'W', low[1], lookahead=barmerge.lookahead_on)
pwEQ = (pwHigh + pwLow) / 2

//Current Day High Low
var Yesterday = 0
var DailyHigh = 0.0
var DailyLow = 0.0

Today = time('D')
CheckDay = Today != Yesterday
Yesterday := Today
DailyHigh := CheckDay or high > DailyHigh ? high[0] : DailyHigh
DailyLow := CheckDay or low < DailyLow ? low[0] : DailyLow

/// Input to show Lines and Labels for right of price in reference to the above
ExtendAxisLine = input.bool(false, title='Extend Axis value lines across chart', group='Daily, Weekly, Monthly, EQ Price Axis', tooltip='-d = Daily, w = Weekly, m = Monthly, p = Previous, dby = Day Before Yesterday')

ExtendOption = ExtendAxisLine ? extend.both : extend.right

PriceDaily = input.bool(true, title='- pdHigh - pdLow - pdEQ', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily 1')
showdOpen = input.bool(true, title='- dOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily')
showdLow = input.bool(false, title='- dLow', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily')
showdHigh = input.bool(false, title='- dHigh', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily')
showpdOpen = input.bool(true, title='- pdOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily')
showdbyOpen = input.bool(false, title='- dbyOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Daily')

PriceWeekly = input.bool(false, title='- pwEQ', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Weekly')
showwOpen = input.bool(true, title='- wOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Weekly')
showpwOpen = input.bool(true, title='- pwOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Weekly')
showpwHigh = input.bool(false, title='- pwHigh', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Weekly')
showpwLow = input.bool(false, title='- pwLow', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Weekly')

showpmOpen = input.bool(true, title='- mOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Monthly')
showmOpen = input.bool(true, title='- pmOpen', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Monthly')
showpmHigh = input.bool(false, title='- pmHigh', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Monthly')
showpmLow = input.bool(false, title='- pmLow', group='Daily, Weekly, Monthly, EQ Price Axis', inline='Monthly')

// Line Var
var line pmHighLine = na
var line pmLowLine = na
var line mOpenLine = na
var line pmOpenLine = na
var line pwHighLine = na
var line pwLowLine = na
var line wOpenLine = na
var line pwOpenLine = na
var line pdOpenLine = na
var line dOpenLine = na
var line dbyOpenLine = na
var line pdHighLine = na
var line pdLowLine = na
var line pdEQLine = na
var line pwEQLine = na
var line dLowLine = na
var line dHighLine = na

//Label Var
var label pmHighLabel = na
var label pmLowLabel = na
var label mOpenLabel = na
var label pmOpenLabel = na
var label pwHighLabel = na
var label pwLowLabel = na
var label wOpenLabel = na
var label pwOpenLabel = na
var label dOpenLabel = na
var label pdOpenLabel = na
var label dbyOpenLabel = na
var label pdHighLabel = na
var label pdLowLabel = na
var label pdEQLabel = na
var label pwEQLabel = na
var label dLowLabel = na
var label dHighLabel = na

//Create Line
if PriceDaily

	pdHighLine := line.new(bar_index[1], pdHigh, bar_index, pdHigh, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	pdLowLine := line.new(bar_index[1], pdLow, bar_index, pdLow, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	pdEQLine := line.new(bar_index[1], pdEQ, bar_index, pdEQ, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)

//Create Label
	pdHighLabel := label.new(bar_index, pdHigh, text='                                                                                              pdHigh - ' + str.tostring(pdHigh), color=DanCCDailyInputColor, textcolor=DanCCDailyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	pdLowLabel := label.new(bar_index, pdLow, text='                                                                                                pdLow - ' + str.tostring(pdLow), color=DanCCDailyInputColor, textcolor=DanCCDailyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	pdEQLabel := label.new(bar_index, pdEQ, text='                                                                                                  pdEQ - ' + str.tostring(pdEQ), color=DanCCDailyInputColor, textcolor=DanCCDailyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)

//Delete Line
	line.delete(pdHighLine[1])
	line.delete(pdLowLine[1])
	line.delete(pdEQLine[1])

//Delete Label    
	label.delete(pdHighLabel[1])
	label.delete(pdLowLabel[1])
	label.delete(pdEQLabel[1])

/////////////////////Weekly
if PriceWeekly
	pwEQLine := line.new(bar_index[1], pwEQ, bar_index, pwEQ, color=DanCCWeeklyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Create Label
	pwEQLabel := label.new(bar_index, pwEQ, text='                                                                                                                                                           pwEQ - ' + str.tostring(pwEQ), color=DanCCWeeklyInputColor, textcolor=DanCCWeeklyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Line
	line.delete(pwEQLine[1])
//Delete Label    
	label.delete(pwEQLabel[1])

//Create Line
if showpwHigh
	pwHighLine := line.new(bar_index[1], pwHigh, bar_index, pwHigh, color=DanCCWeeklyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Delete Line
	line.delete(pwHighLine[1])
//Create Label
	pwHighLabel := label.new(bar_index, pwHigh, text='                                                                                                                                                           pwHigh - ' + str.tostring(pwHigh), color=DanCCWeeklyInputColor, textcolor=DanCCWeeklyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Label    
	label.delete(pwHighLabel[1])

//Create Line
if showpwLow
	pwLowLine := line.new(bar_index[1], pwLow, bar_index, pwLow, color=DanCCWeeklyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Delete Line
	line.delete(pwLowLine[1])
//Create Label
	pwLowLabel := label.new(bar_index, pwLow, text='                                                                                                                                                           pwLow - ' + str.tostring(pwLow), color=DanCCWeeklyInputColor, textcolor=DanCCWeeklyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Label    
	label.delete(pwLowLabel[1])

////////////////////Monthly
if showmOpen
	mOpenLine := line.new(bar_index[1], mOpen, bar_index, mOpen, color=DanCCMonthlyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Create Label
	mOpenLabel := label.new(bar_index, mOpen, text='                                                                                                                                                                                                                      mOpen - ' + str.tostring(mOpen), color=DanCCMonthlyInputColor, textcolor=DanCCMonthlyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Line
	line.delete(mOpenLine[1])
//Delete Label    
	label.delete(mOpenLabel[1])

if showpmOpen
	pmOpenLine := line.new(bar_index[1], pmOpen, bar_index, pmOpen, color=DanCCMonthlyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Create Label
	pmOpenLabel := label.new(bar_index, pmOpen, text='                                                                                                                                                                                                                      pmOpen - ' + str.tostring(pmOpen), color=DanCCMonthlyInputColor, textcolor=DanCCMonthlyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Line
	line.delete(pmOpenLine[1])
//Delete Label    
	label.delete(pmOpenLabel[1])

//Create Line
if showpmHigh
	pmHighLine := line.new(bar_index[1], pmHigh, bar_index, pmHigh, color=DanCCMonthlyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Delete Line
	line.delete(pmHighLine[1])
//Create Label
	pmHighLabel := label.new(bar_index, pmHigh, text='                                                                                                                                                                                                                      pmHigh - ' + str.tostring(pmHigh), color=DanCCMonthlyInputColor, textcolor=DanCCMonthlyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Label    
	label.delete(pmHighLabel[1])

//Create Line
if showpmLow
	pmLowLine := line.new(bar_index[1], pmLow, bar_index, pmLow, color=DanCCMonthlyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
//Delete Line
	line.delete(pmLowLine[1])
//Create Label
	pmLowLabel := label.new(bar_index, pmLow, text='                                                                                                                                                                                                                      pmLow - ' + str.tostring(pmLow), color=DanCCMonthlyInputColor, textcolor=DanCCMonthlyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
//Delete Label    
	label.delete(pmLowLabel[1])

/////////Optional Levels

if showdOpen
	dOpenLine := line.new(bar_index[1], dOpen, bar_index, dOpen, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	dOpenLabel := label.new(bar_index, dOpen, text='                                                                                              dOpen - ' + str.tostring(dOpen), color=DanCCDailyInputColor, textcolor=DanCCDailyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	line.delete(dOpenLine[1])
	label.delete(dOpenLabel[1])

if showdbyOpen
	dbyOpenLine := line.new(bar_index[1], dbyOpen, bar_index, dbyOpen, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	dbyOpenLabel := label.new(bar_index, dbyOpen, text='                                                                                              dbyOpen - ' + str.tostring(dbyOpen), color=DanCCDailyInputColor, textcolor=color.blue, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	line.delete(dbyOpenLine[1])
	label.delete(dbyOpenLabel[1])

if showpdOpen
	pdOpenLine := line.new(bar_index[1], pdOpen, bar_index, pdOpen, color=DanCCDailyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	pdOpenLabel := label.new(bar_index, pdOpen, text='                                                                                              pdOpen - ' + str.tostring(pdOpen), color=DanCCDailyInputColor, textcolor=DanCCDailyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	line.delete(pdOpenLine[1])
	label.delete(pdOpenLabel[1])

if showwOpen
	wOpenLine := line.new(bar_index[1], wOpen, bar_index, wOpen, color=DanCCWeeklyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	wOpenLabel := label.new(bar_index, wOpen, text='                                                                                                                                                           wOpen - ' + str.tostring(wOpen), color=DanCCWeeklyInputColor, textcolor=DanCCWeeklyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
	line.delete(wOpenLine[1])
	label.delete(wOpenLabel[1])

if showpwOpen
	pwOpenLine := line.new(bar_index[1], pwOpen, bar_index, pwOpen, color=DanCCWeeklyInputColor, style=line.style_dashed, width=1, extend=ExtendOption)
	pwOpenLabel := label.new(bar_index, pwOpen, text='                                                                                                                                                           pwOpen - ' + str.tostring(pwOpen), color=DanCCWeeklyInputColor, textcolor=DanCCWeeklyInputColor, style=label.style_none, size=size.normal, xloc=xloc.bar_index)
	line.delete(pwOpenLine[1])
	label.delete(pwOpenLabel[1])

if showdLow
	dLowLine := line.new(bar_index[1], DailyLow, bar_index, DailyLow, color=color.white, style=line.style_solid, width=1, extend=ExtendOption)
	dLowLabel := label.new(bar_index, DailyLow, text='                                                                                              dLow - ' + str.tostring(DailyLow), color=color.white, textcolor=color.white, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	line.delete(dLowLine[1])
	label.delete(dLowLabel[1])

if showdHigh
	dHighLine := line.new(bar_index[1], DailyHigh, bar_index, DailyHigh, color=color.white, style=line.style_solid, width=1, extend=ExtendOption)
	dHighLabel := label.new(bar_index, DailyHigh, text='                                                                                              dHigh - ' + str.tostring(DailyHigh), color=color.white, textcolor=color.white, style=label.style_none, size=size.normal, xloc=xloc.bar_index, textalign=text.align_right)
	line.delete(dHighLine[1])
	label.delete(dHighLabel[1])